name: pipeline-main

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

env:
  MONGODB_URL: ${{ secrets.MONGODB_URL }}

jobs:
  test-unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: "npm"

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      run: npm run test:unit

  test-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: "npm"

    - name: Install dependencies
      run: npm install

    - name: Start MongoDB with Docker
      run: docker-compose up -d

    - name: Check running containers
      run: docker ps

    - name: Run integration tests
      run: npm run test:integration
      env:
        MONGODB_URL: mongodb://admin:password@localhost:27017

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    needs:
    - test-unit
    - test-integration

    permissions:
      contents: "read"
      id-token: "write"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: üîí Google Auth
      id: auth
      uses: "google-github-actions/auth@v2"
      with:
        credentials_json: "${{ secrets.GCP_SA_KEY }}"

    - name: üèóÔ∏è Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ secrets.SERVICE_NAME }}
        region: ${{ secrets.SERVICE_REGION }}
        env_vars: MONGODB_URL=${{ secrets.MONGODB_URL }}
        source: ./

    - name: üì§ Show Output
      run: echo ${{ steps.deploy.outputs.url }}
